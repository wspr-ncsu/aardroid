// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package org.argus.jnsaf.server.jnsaf_grpc

@SerialVersionUID(0L)
final case class RegisterTaintRequest(
    apkDigest: _root_.scala.Predef.String = "",
    signature: _root_.scala.Predef.String = "",
    sourceKind: _root_.scala.Predef.String = "",
    sinkKind: _root_.scala.Predef.String = ""
    ) extends scalapb.GeneratedMessage with scalapb.Message[RegisterTaintRequest] with scalapb.lenses.Updatable[RegisterTaintRequest] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (apkDigest != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, apkDigest) }
      if (signature != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, signature) }
      if (sourceKind != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, sourceKind) }
      if (sinkKind != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, sinkKind) }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = apkDigest
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = signature
        if (__v != "") {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = sourceKind
        if (__v != "") {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = sinkKind
        if (__v != "") {
          _output__.writeString(4, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.argus.jnsaf.server.jnsaf_grpc.RegisterTaintRequest = {
      var __apkDigest = this.apkDigest
      var __signature = this.signature
      var __sourceKind = this.sourceKind
      var __sinkKind = this.sinkKind
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __apkDigest = _input__.readString()
          case 18 =>
            __signature = _input__.readString()
          case 26 =>
            __sourceKind = _input__.readString()
          case 34 =>
            __sinkKind = _input__.readString()
          case tag => _input__.skipField(tag)
        }
      }
      org.argus.jnsaf.server.jnsaf_grpc.RegisterTaintRequest(
          apkDigest = __apkDigest,
          signature = __signature,
          sourceKind = __sourceKind,
          sinkKind = __sinkKind
      )
    }
    def withApkDigest(__v: _root_.scala.Predef.String): RegisterTaintRequest = copy(apkDigest = __v)
    def withSignature(__v: _root_.scala.Predef.String): RegisterTaintRequest = copy(signature = __v)
    def withSourceKind(__v: _root_.scala.Predef.String): RegisterTaintRequest = copy(sourceKind = __v)
    def withSinkKind(__v: _root_.scala.Predef.String): RegisterTaintRequest = copy(sinkKind = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = apkDigest
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = signature
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = sourceKind
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = sinkKind
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(apkDigest)
        case 2 => _root_.scalapb.descriptors.PString(signature)
        case 3 => _root_.scalapb.descriptors.PString(sourceKind)
        case 4 => _root_.scalapb.descriptors.PString(sinkKind)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = org.argus.jnsaf.server.jnsaf_grpc.RegisterTaintRequest
}

object RegisterTaintRequest extends scalapb.GeneratedMessageCompanion[org.argus.jnsaf.server.jnsaf_grpc.RegisterTaintRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.argus.jnsaf.server.jnsaf_grpc.RegisterTaintRequest] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): org.argus.jnsaf.server.jnsaf_grpc.RegisterTaintRequest = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    org.argus.jnsaf.server.jnsaf_grpc.RegisterTaintRequest(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(2), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(3), "").asInstanceOf[_root_.scala.Predef.String]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.argus.jnsaf.server.jnsaf_grpc.RegisterTaintRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      org.argus.jnsaf.server.jnsaf_grpc.RegisterTaintRequest(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = JnsafGrpcProto.javaDescriptor.getMessageTypes.get(8)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = JnsafGrpcProto.scalaDescriptor.messages(8)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = org.argus.jnsaf.server.jnsaf_grpc.RegisterTaintRequest(
  )
  implicit class RegisterTaintRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.argus.jnsaf.server.jnsaf_grpc.RegisterTaintRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.argus.jnsaf.server.jnsaf_grpc.RegisterTaintRequest](_l) {
    def apkDigest: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.apkDigest)((c_, f_) => c_.copy(apkDigest = f_))
    def signature: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.signature)((c_, f_) => c_.copy(signature = f_))
    def sourceKind: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.sourceKind)((c_, f_) => c_.copy(sourceKind = f_))
    def sinkKind: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.sinkKind)((c_, f_) => c_.copy(sinkKind = f_))
  }
  final val APK_DIGEST_FIELD_NUMBER = 1
  final val SIGNATURE_FIELD_NUMBER = 2
  final val SOURCE_KIND_FIELD_NUMBER = 3
  final val SINK_KIND_FIELD_NUMBER = 4
}
