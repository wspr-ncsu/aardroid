// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package org.argus.jnsaf.server.jnsaf_grpc

@SerialVersionUID(0L)
final case class RegisterICCRequest(
    apkDigest: _root_.scala.Predef.String = "",
    componentName: _root_.scala.Predef.String = "",
    targetComponentName: _root_.scala.Predef.String = "",
    signature: _root_.scala.Predef.String = "",
    isSource: _root_.scala.Boolean = false,
    sourceArgs: _root_.scala.collection.Seq[_root_.scala.Int] = _root_.scala.collection.Seq.empty
    ) extends scalapb.GeneratedMessage with scalapb.Message[RegisterICCRequest] with scalapb.lenses.Updatable[RegisterICCRequest] {
    private[this] def sourceArgsSerializedSize = {
      if (__sourceArgsSerializedSizeField == 0) __sourceArgsSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        sourceArgs.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(__i))
        __s
      }
      __sourceArgsSerializedSizeField
    }
    @transient private[this] var __sourceArgsSerializedSizeField: _root_.scala.Int = 0
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (apkDigest != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, apkDigest) }
      if (componentName != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, componentName) }
      if (targetComponentName != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, targetComponentName) }
      if (signature != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, signature) }
      if (isSource != false) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, isSource) }
      if(sourceArgs.nonEmpty) {
        val __localsize = sourceArgsSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = apkDigest
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = componentName
        if (__v != "") {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = targetComponentName
        if (__v != "") {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = signature
        if (__v != "") {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = isSource
        if (__v != false) {
          _output__.writeBool(5, __v)
        }
      };
      if (sourceArgs.nonEmpty) {
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(sourceArgsSerializedSize)
        sourceArgs.foreach(_output__.writeInt32NoTag)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.argus.jnsaf.server.jnsaf_grpc.RegisterICCRequest = {
      var __apkDigest = this.apkDigest
      var __componentName = this.componentName
      var __targetComponentName = this.targetComponentName
      var __signature = this.signature
      var __isSource = this.isSource
      val __sourceArgs = (_root_.scala.collection.immutable.Vector.newBuilder[_root_.scala.Int] ++= this.sourceArgs)
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __apkDigest = _input__.readString()
          case 18 =>
            __componentName = _input__.readString()
          case 26 =>
            __targetComponentName = _input__.readString()
          case 34 =>
            __signature = _input__.readString()
          case 40 =>
            __isSource = _input__.readBool()
          case 48 =>
            __sourceArgs += _input__.readInt32()
          case 50 => {
            val length = _input__.readRawVarint32()
            val oldLimit = _input__.pushLimit(length)
            while (_input__.getBytesUntilLimit > 0) {
              __sourceArgs += _input__.readInt32
            }
            _input__.popLimit(oldLimit)
          }
          case tag => _input__.skipField(tag)
        }
      }
      org.argus.jnsaf.server.jnsaf_grpc.RegisterICCRequest(
          apkDigest = __apkDigest,
          componentName = __componentName,
          targetComponentName = __targetComponentName,
          signature = __signature,
          isSource = __isSource,
          sourceArgs = __sourceArgs.result()
      )
    }
    def withApkDigest(__v: _root_.scala.Predef.String): RegisterICCRequest = copy(apkDigest = __v)
    def withComponentName(__v: _root_.scala.Predef.String): RegisterICCRequest = copy(componentName = __v)
    def withTargetComponentName(__v: _root_.scala.Predef.String): RegisterICCRequest = copy(targetComponentName = __v)
    def withSignature(__v: _root_.scala.Predef.String): RegisterICCRequest = copy(signature = __v)
    def withIsSource(__v: _root_.scala.Boolean): RegisterICCRequest = copy(isSource = __v)
    def clearSourceArgs = copy(sourceArgs = _root_.scala.collection.Seq.empty)
    def addSourceArgs(__vs: _root_.scala.Int*): RegisterICCRequest = addAllSourceArgs(__vs)
    def addAllSourceArgs(__vs: TraversableOnce[_root_.scala.Int]): RegisterICCRequest = copy(sourceArgs = sourceArgs ++ __vs)
    def withSourceArgs(__v: _root_.scala.collection.Seq[_root_.scala.Int]): RegisterICCRequest = copy(sourceArgs = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = apkDigest
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = componentName
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = targetComponentName
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = signature
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = isSource
          if (__t != false) __t else null
        }
        case 6 => sourceArgs
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(apkDigest)
        case 2 => _root_.scalapb.descriptors.PString(componentName)
        case 3 => _root_.scalapb.descriptors.PString(targetComponentName)
        case 4 => _root_.scalapb.descriptors.PString(signature)
        case 5 => _root_.scalapb.descriptors.PBoolean(isSource)
        case 6 => _root_.scalapb.descriptors.PRepeated(sourceArgs.map(_root_.scalapb.descriptors.PInt)(_root_.scala.collection.breakOut))
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = org.argus.jnsaf.server.jnsaf_grpc.RegisterICCRequest
}

object RegisterICCRequest extends scalapb.GeneratedMessageCompanion[org.argus.jnsaf.server.jnsaf_grpc.RegisterICCRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.argus.jnsaf.server.jnsaf_grpc.RegisterICCRequest] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): org.argus.jnsaf.server.jnsaf_grpc.RegisterICCRequest = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    org.argus.jnsaf.server.jnsaf_grpc.RegisterICCRequest(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(2), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(3), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.getOrElse(__fields.get(4), false).asInstanceOf[_root_.scala.Boolean],
      __fieldsMap.getOrElse(__fields.get(5), Nil).asInstanceOf[_root_.scala.collection.Seq[_root_.scala.Int]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.argus.jnsaf.server.jnsaf_grpc.RegisterICCRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      org.argus.jnsaf.server.jnsaf_grpc.RegisterICCRequest(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.collection.Seq[_root_.scala.Int]]).getOrElse(_root_.scala.collection.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = JnsafGrpcProto.javaDescriptor.getMessageTypes.get(6)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = JnsafGrpcProto.scalaDescriptor.messages(6)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = org.argus.jnsaf.server.jnsaf_grpc.RegisterICCRequest(
  )
  implicit class RegisterICCRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.argus.jnsaf.server.jnsaf_grpc.RegisterICCRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.argus.jnsaf.server.jnsaf_grpc.RegisterICCRequest](_l) {
    def apkDigest: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.apkDigest)((c_, f_) => c_.copy(apkDigest = f_))
    def componentName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.componentName)((c_, f_) => c_.copy(componentName = f_))
    def targetComponentName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.targetComponentName)((c_, f_) => c_.copy(targetComponentName = f_))
    def signature: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.signature)((c_, f_) => c_.copy(signature = f_))
    def isSource: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isSource)((c_, f_) => c_.copy(isSource = f_))
    def sourceArgs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.Seq[_root_.scala.Int]] = field(_.sourceArgs)((c_, f_) => c_.copy(sourceArgs = f_))
  }
  final val APK_DIGEST_FIELD_NUMBER = 1
  final val COMPONENT_NAME_FIELD_NUMBER = 2
  final val TARGET_COMPONENT_NAME_FIELD_NUMBER = 3
  final val SIGNATURE_FIELD_NUMBER = 4
  final val IS_SOURCE_FIELD_NUMBER = 5
  final val SOURCE_ARGS_FIELD_NUMBER = 6
}
