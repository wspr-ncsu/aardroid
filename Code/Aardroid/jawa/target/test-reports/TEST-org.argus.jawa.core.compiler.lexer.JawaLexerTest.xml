<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="Samins-MacBook-Pro.local" name="org.argus.jawa.core.compiler.lexer.JawaLexerTest" tests="70" errors="0" failures="0" skipped="0" time="0.055" timestamp="2021-04-10T02:33:22">
                     <properties>
      <property name="os.detected.version" value="10.16"/><property name="jline.esc.timeout" value="0"/><property name="jna.platform.library.path" value="/usr/lib:/usr/lib"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sun.boot.library.path" value="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib"/><property name="java.vm.version" value="25.281-b09"/><property name="gopherProxySet" value="false"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="os.detected.version.minor" value="16"/><property name="path.separator" value=":"/><property name="jna.loaded" value="true"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="US"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="jna.nosys" value="true"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/Users/samin/Documents/Work/Amandroid/Aardroid/Argus-SAF"/><property name="java.runtime.version" value="1.8.0_281-b09"/><property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/><property name="java.endorsed.dirs" value="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/endorsed"/><property name="os.arch" value="x86_64"/><property name="java.io.tmpdir" value="/var/folders/y1/7pjj74j5413fsq77jjltwww00000gn/T/"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="os.detected.version.major" value="10"/><property name="os.name" value="Mac OS X"/><property name="os.detected.classifier" value="osx-x86_64"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/var/folders/y1/7pjj74j5413fsq77jjltwww00000gn/T/jna-109202756/jna8237783155991491015.tmp"/><property name="java.library.path" value="/Users/samin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/><property name="os.detected.arch" value="x86_64"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.detected.name" value="osx"/><property name="os.version" value="10.16"/><property name="user.home" value="/Users/samin"/><property name="user.timezone" value="America/New_York"/><property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="/Users/samin/Documents/Work/Amandroid/Aardroid/Argus-SAF/tools/bin/sbt-launch.jar"/><property name="user.name" value="samin"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="/Users/samin/Documents/Work/Amandroid/Aardroid/Argus-SAF/tools/bin/sbt-launch.jar clean compile test"/><property name="java.home" value="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_281"/><property name="java.ext.dirs" value="/Users/samin/Library/Java/Extensions:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"/><property name="sun.boot.class.path" value="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/resources.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/rt.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/sunrsasign.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/jsse.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/jce.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/charsets.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/jfr.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeBig"/><property name="sun.cpu.endian" value="little"/><property name="sun.cpu.isalist" value=""/>
    </properties>
                     <testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;&lt;&lt;&lt; as &gt;&gt;&gt;List()&lt;&lt;&lt;" time="0.002">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;`format`&lt;&lt;&lt; as &gt;&gt;&gt;List(ID)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;`format`;`format`&lt;&lt;&lt; as &gt;&gt;&gt;List(ID, SEMI, ID)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;||&lt;&lt;&lt; as &gt;&gt;&gt;List(OP)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;:=&lt;&lt;&lt; as &gt;&gt;&gt;List(ASSIGN_OP)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;^~&lt;&lt;&lt; as &gt;&gt;&gt;List(OP)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;v0/2&lt;&lt;&lt; as &gt;&gt;&gt;List(ID, OP, INTEGER_LITERAL)&lt;&lt;&lt;" time="0.002">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;record&lt;&lt;&lt; as &gt;&gt;&gt;List(CLASS_OR_INTERFACE)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;procedure&lt;&lt;&lt; as &gt;&gt;&gt;List(METHOD)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;foo  bar   baz&lt;&lt;&lt; as &gt;&gt;&gt;List(ID, WS, ID, WS, ID)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;  &lt;&lt;&lt; as &gt;&gt;&gt;List(WS)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;// comment&lt;&lt;&lt; as &gt;&gt;&gt;List(LINE_COMMENT)&lt;&lt;&lt;" time="0.003">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;//&lt;&lt;&lt; as &gt;&gt;&gt;List(LINE_COMMENT)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;foo// comment&lt;&lt;&lt; as &gt;&gt;&gt;List(ID, LINE_COMMENT)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;foo // comment&lt;&lt;&lt; as &gt;&gt;&gt;List(ID, WS, LINE_COMMENT)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;foo// comment
    abc//comment&lt;&lt;&lt; as &gt;&gt;&gt;List(ID, LINE_COMMENT, WS, ID, LINE_COMMENT)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;foo/* comment */bar&lt;&lt;&lt; as &gt;&gt;&gt;List(ID, MULTILINE_COMMENT, ID)&lt;&lt;&lt;" time="0.003">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;/* bar var */&lt;&lt;&lt; as &gt;&gt;&gt;List(MULTILINE_COMMENT)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;/**/&lt;&lt;&lt; as &gt;&gt;&gt;List(MULTILINE_COMMENT)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;/***/&lt;&lt;&lt; as &gt;&gt;&gt;List(DOC_COMMENT)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;/** asdf */&lt;&lt;&lt; as &gt;&gt;&gt;List(DOC_COMMENT)&lt;&lt;&lt;" time="0.006">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;`yield`&lt;&lt;&lt; as &gt;&gt;&gt;List(ID)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;&quot;foobar&quot;&lt;&lt;&lt; as &gt;&gt;&gt;List(STRING_LITERAL)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;`@@global`&lt;&lt;&lt; as &gt;&gt;&gt;List(STATIC_ID)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;@@global&lt;&lt;&lt; as &gt;&gt;&gt;List(STATIC_ID)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;&quot;&quot;&quot;f&quot;o&quot;o&quot;&quot;&quot;&lt;&lt;&lt; as &gt;&gt;&gt;List(STRING_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;&quot;\&quot;&quot;&lt;&lt;&lt; as &gt;&gt;&gt;List(STRING_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="baz()&lt;&lt;&lt; as &gt;&gt;&gt;List(ID, DOT, ID, DOT, ID, LPAREN, RPAREN)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="1234&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="1234e2&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="1234e+2&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="1e-2&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="1e+2345f&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="1e+2345d&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;100&lt;&lt;&lt; as &gt;&gt;&gt;List(INTEGER_LITERAL)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;1&lt;&lt;&lt; as &gt;&gt;&gt;List(INTEGER_LITERAL)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;1L&lt;&lt;&lt; as &gt;&gt;&gt;List(INTEGER_LITERAL)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;0&lt;&lt;&lt; as &gt;&gt;&gt;List(INTEGER_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;0L&lt;&lt;&lt; as &gt;&gt;&gt;List(INTEGER_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;0x2345&lt;&lt;&lt; as &gt;&gt;&gt;List(INTEGER_LITERAL)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;0x1&lt;&lt;&lt; as &gt;&gt;&gt;List(INTEGER_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;0x32413L&lt;&lt;&lt; as &gt;&gt;&gt;List(INTEGER_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;#&lt;&lt;&lt; as &gt;&gt;&gt;List(LOCATION_ID)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="&lt;&lt;&lt; as &gt;&gt;&gt;List(LOCATION_ID)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="1234&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="1234e2&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="1234e+2&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="1e-2&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="1e+2345f&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="1e+2345d&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;10e2&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;10e+2&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;10e-2&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;10e+2345f&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;10e+2345d&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;'f'&lt;&lt;&lt; as &gt;&gt;&gt;List(CHARACTER_LITERAL)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;'\n'&lt;&lt;&lt; as &gt;&gt;&gt;List(CHARACTER_LITERAL)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;'\025'&lt;&lt;&lt; as &gt;&gt;&gt;List(CHARACTER_LITERAL)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name=" tokenTextBuffer:= new StringBuilder&lt;&lt;&lt; as &gt;&gt;&gt;List(LOCATION_ID, WS, ID, ASSIGN_OP, WS, NEW, WS, ID)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name=" lcmp(v0, v1);&lt;&lt;&lt; as &gt;&gt;&gt;List(LOCATION_ID, WS, CMP, LPAREN, ID, COMMA, WS, ID, RPAREN, SEMI)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;println(&quot;bob&quot;)
println(&quot;foo&quot;)&lt;&lt;&lt; as &gt;&gt;&gt;List(ID, LPAREN, STRING_LITERAL, RPAREN, WS, ID, LPAREN, STRING_LITERAL, RPAREN)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;&quot;\u0061&quot;&lt;&lt;&lt; as &gt;&gt;&gt;List(STRING_LITERAL)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;&quot;\u000a&quot;&lt;&lt;&lt; as &gt;&gt;&gt;List(STRING_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;0X1234&lt;&lt;&lt; as &gt;&gt;&gt;List(INTEGER_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;&quot;\u001A&quot;&lt;&lt;&lt; as &gt;&gt;&gt;List(STRING_LITERAL)&lt;&lt;&lt;" time="0.0">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;&quot;&quot;&quot;\u001A&quot;&quot;&quot;&lt;&lt;&lt; as &gt;&gt;&gt;List(STRING_LITERAL)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="should tokenise &gt;&gt;&gt;foo+\u0061+bar&lt;&lt;&lt; as &gt;&gt;&gt;List(ID, OP, ID, OP, ID)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="max(2)&lt;&lt;&lt; as &gt;&gt;&gt;List(FLOATING_POINT_LITERAL, DOT, ID, LPAREN, INTEGER_LITERAL, RPAREN)&lt;&lt;&lt;" time="0.001">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="Lexer should throw a lexer exception" time="0.003">
                                                 
                                               </testcase><testcase classname="org.argus.jawa.core.compiler.lexer.JawaLexerTest" name="   return @void ;

   }
&lt;&lt;&lt; as &gt;&gt;&gt;List(WS, CLASS_OR_INTERFACE, WS, ID, WS, AT, ID, WS, ID, WS, AT, ID, WS, ID, WS, EXTENDS_AND_IMPLEMENTS, WS, ID, WS, AT, ID, WS, ID, WS, LBRACE, WS, ID, WS, ID, WS, AT, ID, WS, SEMI, WS, ID, WS, ID, WS, AT, ID, WS, SEMI, WS, RBRACE, WS, METHOD, WS, ID, WS, ID, WS, LPAREN, ID, WS, ID, WS, AT, ID, WS, ID, RPAREN, WS, AT, ID, WS, ID, WS, AT, ID, WS, ID, WS, LBRACE, WS, ID, WS, SEMI, WS, ID, SEMI, WS, LOCATION_ID, WS, ID, ASSIGN_OP, WS, INTEGER_LITERAL, WS, AT, ID, WS, ID, SEMI, WS, LOCATION_ID, WS, CALL, WS, ID, ASSIGN_OP, WS, ID, LPAREN, ID, RPAREN, WS, AT, ID, WS, ID, WS, AT, ID, WS, ID, SEMI, WS, LOCATION_ID, WS, ID, DOT, ID, WS, ASSIGN_OP, WS, ID, WS, AT, ID, WS, ID, SEMI, WS, LOCATION_ID, WS, ID, DOT, ID, WS, ASSIGN_OP, WS, ID, WS, AT, ID, WS, ID, SEMI, WS, LOCATION_ID, WS, RETURN, WS, AT, ID, WS, SEMI, WS, RBRACE, WS)&lt;&lt;&lt;" time="0.002">
                                                 
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>