// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package org.argus.jawa.core.java_signatures

@SerialVersionUID(0L)
final case class PrimitiveType(
    `type`: org.argus.jawa.core.java_signatures.PrimitiveType.Primitive = org.argus.jawa.core.java_signatures.PrimitiveType.Primitive.BYTE
    ) extends scalapb.GeneratedMessage with scalapb.Message[PrimitiveType] with scalapb.lenses.Updatable[PrimitiveType] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (`type` != org.argus.jawa.core.java_signatures.PrimitiveType.Primitive.BYTE) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, `type`.value) }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = `type`
        if (__v != org.argus.jawa.core.java_signatures.PrimitiveType.Primitive.BYTE) {
          _output__.writeEnum(1, __v.value)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.argus.jawa.core.java_signatures.PrimitiveType = {
      var __type = this.`type`
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __type = org.argus.jawa.core.java_signatures.PrimitiveType.Primitive.fromValue(_input__.readEnum())
          case tag => _input__.skipField(tag)
        }
      }
      org.argus.jawa.core.java_signatures.PrimitiveType(
          `type` = __type
      )
    }
    def withType(__v: org.argus.jawa.core.java_signatures.PrimitiveType.Primitive): PrimitiveType = copy(`type` = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = `type`.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(`type`.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = org.argus.jawa.core.java_signatures.PrimitiveType
}

object PrimitiveType extends scalapb.GeneratedMessageCompanion[org.argus.jawa.core.java_signatures.PrimitiveType] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.argus.jawa.core.java_signatures.PrimitiveType] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): org.argus.jawa.core.java_signatures.PrimitiveType = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    org.argus.jawa.core.java_signatures.PrimitiveType(
      org.argus.jawa.core.java_signatures.PrimitiveType.Primitive.fromValue(__fieldsMap.getOrElse(__fields.get(0), org.argus.jawa.core.java_signatures.PrimitiveType.Primitive.BYTE.javaValueDescriptor).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.argus.jawa.core.java_signatures.PrimitiveType] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      org.argus.jawa.core.java_signatures.PrimitiveType(
        org.argus.jawa.core.java_signatures.PrimitiveType.Primitive.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(org.argus.jawa.core.java_signatures.PrimitiveType.Primitive.BYTE.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = JavaSignaturesProto.javaDescriptor.getMessageTypes.get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = JavaSignaturesProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => org.argus.jawa.core.java_signatures.PrimitiveType.Primitive
    }
  }
  lazy val defaultInstance = org.argus.jawa.core.java_signatures.PrimitiveType(
  )
  sealed trait Primitive extends _root_.scalapb.GeneratedEnum {
    type EnumType = Primitive
    def isByte: _root_.scala.Boolean = false
    def isShort: _root_.scala.Boolean = false
    def isInt: _root_.scala.Boolean = false
    def isFloat: _root_.scala.Boolean = false
    def isBoolean: _root_.scala.Boolean = false
    def isChar: _root_.scala.Boolean = false
    def isLong: _root_.scala.Boolean = false
    def isDouble: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[Primitive] = org.argus.jawa.core.java_signatures.PrimitiveType.Primitive
  }
  
  object Primitive extends _root_.scalapb.GeneratedEnumCompanion[Primitive] {
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Primitive] = this
    @SerialVersionUID(0L)
    case object BYTE extends Primitive {
      val value = 0
      val index = 0
      val name = "BYTE"
      override def isByte: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object SHORT extends Primitive {
      val value = 1
      val index = 1
      val name = "SHORT"
      override def isShort: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object INT extends Primitive {
      val value = 2
      val index = 2
      val name = "INT"
      override def isInt: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object FLOAT extends Primitive {
      val value = 3
      val index = 3
      val name = "FLOAT"
      override def isFloat: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object BOOLEAN extends Primitive {
      val value = 4
      val index = 4
      val name = "BOOLEAN"
      override def isBoolean: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object CHAR extends Primitive {
      val value = 5
      val index = 5
      val name = "CHAR"
      override def isChar: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object LONG extends Primitive {
      val value = 6
      val index = 6
      val name = "LONG"
      override def isLong: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object DOUBLE extends Primitive {
      val value = 7
      val index = 7
      val name = "DOUBLE"
      override def isDouble: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(value: _root_.scala.Int) extends Primitive with _root_.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.Seq(BYTE, SHORT, INT, FLOAT, BOOLEAN, CHAR, LONG, DOUBLE)
    def fromValue(value: _root_.scala.Int): Primitive = value match {
      case 0 => BYTE
      case 1 => SHORT
      case 2 => INT
      case 3 => FLOAT
      case 4 => BOOLEAN
      case 5 => CHAR
      case 6 => LONG
      case 7 => DOUBLE
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = org.argus.jawa.core.java_signatures.PrimitiveType.javaDescriptor.getEnumTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = org.argus.jawa.core.java_signatures.PrimitiveType.scalaDescriptor.enums(0)
  }
  implicit class PrimitiveTypeLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.argus.jawa.core.java_signatures.PrimitiveType]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.argus.jawa.core.java_signatures.PrimitiveType](_l) {
    def `type`: _root_.scalapb.lenses.Lens[UpperPB, org.argus.jawa.core.java_signatures.PrimitiveType.Primitive] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
  }
  final val TYPE_FIELD_NUMBER = 1
}
