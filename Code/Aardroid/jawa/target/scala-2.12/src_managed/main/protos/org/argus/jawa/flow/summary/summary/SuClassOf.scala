// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package org.argus.jawa.flow.summary.summary

@SerialVersionUID(0L)
final case class SuClassOf(
    ruleRhs: scala.Option[org.argus.jawa.flow.summary.summary.RuleRhs] = None,
    suLocation: scala.Option[org.argus.jawa.flow.summary.summary.SuLocation] = None
    ) extends scalapb.GeneratedMessage with scalapb.Message[SuClassOf] with scalapb.lenses.Updatable[SuClassOf] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (ruleRhs.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(ruleRhs.get.serializedSize) + ruleRhs.get.serializedSize }
      if (suLocation.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(suLocation.get.serializedSize) + suLocation.get.serializedSize }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      ruleRhs.foreach { __v =>
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      suLocation.foreach { __v =>
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.argus.jawa.flow.summary.summary.SuClassOf = {
      var __ruleRhs = this.ruleRhs
      var __suLocation = this.suLocation
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __ruleRhs = Option(_root_.scalapb.LiteParser.readMessage(_input__, __ruleRhs.getOrElse(org.argus.jawa.flow.summary.summary.RuleRhs.defaultInstance)))
          case 18 =>
            __suLocation = Option(_root_.scalapb.LiteParser.readMessage(_input__, __suLocation.getOrElse(org.argus.jawa.flow.summary.summary.SuLocation.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      org.argus.jawa.flow.summary.summary.SuClassOf(
          ruleRhs = __ruleRhs,
          suLocation = __suLocation
      )
    }
    def getRuleRhs: org.argus.jawa.flow.summary.summary.RuleRhs = ruleRhs.getOrElse(org.argus.jawa.flow.summary.summary.RuleRhs.defaultInstance)
    def clearRuleRhs: SuClassOf = copy(ruleRhs = None)
    def withRuleRhs(__v: org.argus.jawa.flow.summary.summary.RuleRhs): SuClassOf = copy(ruleRhs = Option(__v))
    def getSuLocation: org.argus.jawa.flow.summary.summary.SuLocation = suLocation.getOrElse(org.argus.jawa.flow.summary.summary.SuLocation.defaultInstance)
    def clearSuLocation: SuClassOf = copy(suLocation = None)
    def withSuLocation(__v: org.argus.jawa.flow.summary.summary.SuLocation): SuClassOf = copy(suLocation = Option(__v))
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => ruleRhs.orNull
        case 2 => suLocation.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => ruleRhs.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => suLocation.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = org.argus.jawa.flow.summary.summary.SuClassOf
}

object SuClassOf extends scalapb.GeneratedMessageCompanion[org.argus.jawa.flow.summary.summary.SuClassOf] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.argus.jawa.flow.summary.summary.SuClassOf] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): org.argus.jawa.flow.summary.summary.SuClassOf = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    org.argus.jawa.flow.summary.summary.SuClassOf(
      __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[org.argus.jawa.flow.summary.summary.RuleRhs]],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[org.argus.jawa.flow.summary.summary.SuLocation]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.argus.jawa.flow.summary.summary.SuClassOf] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      org.argus.jawa.flow.summary.summary.SuClassOf(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[org.argus.jawa.flow.summary.summary.RuleRhs]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[org.argus.jawa.flow.summary.summary.SuLocation]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = SummaryProto.javaDescriptor.getMessageTypes.get(13)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = SummaryProto.scalaDescriptor.messages(13)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = org.argus.jawa.flow.summary.summary.RuleRhs
      case 2 => __out = org.argus.jawa.flow.summary.summary.SuLocation
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = org.argus.jawa.flow.summary.summary.SuClassOf(
  )
  implicit class SuClassOfLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.argus.jawa.flow.summary.summary.SuClassOf]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.argus.jawa.flow.summary.summary.SuClassOf](_l) {
    def ruleRhs: _root_.scalapb.lenses.Lens[UpperPB, org.argus.jawa.flow.summary.summary.RuleRhs] = field(_.getRuleRhs)((c_, f_) => c_.copy(ruleRhs = Option(f_)))
    def optionalRuleRhs: _root_.scalapb.lenses.Lens[UpperPB, scala.Option[org.argus.jawa.flow.summary.summary.RuleRhs]] = field(_.ruleRhs)((c_, f_) => c_.copy(ruleRhs = f_))
    def suLocation: _root_.scalapb.lenses.Lens[UpperPB, org.argus.jawa.flow.summary.summary.SuLocation] = field(_.getSuLocation)((c_, f_) => c_.copy(suLocation = Option(f_)))
    def optionalSuLocation: _root_.scalapb.lenses.Lens[UpperPB, scala.Option[org.argus.jawa.flow.summary.summary.SuLocation]] = field(_.suLocation)((c_, f_) => c_.copy(suLocation = f_))
  }
  final val RULE_RHS_FIELD_NUMBER = 1
  final val SU_LOCATION_FIELD_NUMBER = 2
}
