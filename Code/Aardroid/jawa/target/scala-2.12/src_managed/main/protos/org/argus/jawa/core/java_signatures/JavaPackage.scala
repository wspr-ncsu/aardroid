// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package org.argus.jawa.core.java_signatures

@SerialVersionUID(0L)
final case class JavaPackage(
    name: _root_.scala.Predef.String = "",
    parent: scala.Option[org.argus.jawa.core.java_signatures.JavaPackage] = None
    ) extends scalapb.GeneratedMessage with scalapb.Message[JavaPackage] with scalapb.lenses.Updatable[JavaPackage] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (name != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, name) }
      if (parent.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(parent.get.serializedSize) + parent.get.serializedSize }
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = name
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      parent.foreach { __v =>
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.argus.jawa.core.java_signatures.JavaPackage = {
      var __name = this.name
      var __parent = this.parent
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __name = _input__.readString()
          case 18 =>
            __parent = Option(_root_.scalapb.LiteParser.readMessage(_input__, __parent.getOrElse(org.argus.jawa.core.java_signatures.JavaPackage.defaultInstance)))
          case tag => _input__.skipField(tag)
        }
      }
      org.argus.jawa.core.java_signatures.JavaPackage(
          name = __name,
          parent = __parent
      )
    }
    def withName(__v: _root_.scala.Predef.String): JavaPackage = copy(name = __v)
    def getParent: org.argus.jawa.core.java_signatures.JavaPackage = parent.getOrElse(org.argus.jawa.core.java_signatures.JavaPackage.defaultInstance)
    def clearParent: JavaPackage = copy(parent = None)
    def withParent(__v: org.argus.jawa.core.java_signatures.JavaPackage): JavaPackage = copy(parent = Option(__v))
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 2 => parent.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(name)
        case 2 => parent.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = org.argus.jawa.core.java_signatures.JavaPackage
}

object JavaPackage extends scalapb.GeneratedMessageCompanion[org.argus.jawa.core.java_signatures.JavaPackage] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.argus.jawa.core.java_signatures.JavaPackage] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): org.argus.jawa.core.java_signatures.JavaPackage = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    org.argus.jawa.core.java_signatures.JavaPackage(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[_root_.scala.Predef.String],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[org.argus.jawa.core.java_signatures.JavaPackage]]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.argus.jawa.core.java_signatures.JavaPackage] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      org.argus.jawa.core.java_signatures.JavaPackage(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[org.argus.jawa.core.java_signatures.JavaPackage]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = JavaSignaturesProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = JavaSignaturesProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = org.argus.jawa.core.java_signatures.JavaPackage
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = org.argus.jawa.core.java_signatures.JavaPackage(
  )
  implicit class JavaPackageLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.argus.jawa.core.java_signatures.JavaPackage]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.argus.jawa.core.java_signatures.JavaPackage](_l) {
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def parent: _root_.scalapb.lenses.Lens[UpperPB, org.argus.jawa.core.java_signatures.JavaPackage] = field(_.getParent)((c_, f_) => c_.copy(parent = Option(f_)))
    def optionalParent: _root_.scalapb.lenses.Lens[UpperPB, scala.Option[org.argus.jawa.core.java_signatures.JavaPackage]] = field(_.parent)((c_, f_) => c_.copy(parent = f_))
  }
  final val NAME_FIELD_NUMBER = 1
  final val PARENT_FIELD_NUMBER = 2
}
